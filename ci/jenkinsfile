#!/usr/bin/env groovy
// guess what type i am, and what i'm doing...
pipeline {
    agent any
    environment {

        DOCKER_HUB_USERNAME = "bjonathanb"
        DOCKER_HUB_PASSWORD = ""
        DOCKERHUB_REPO_NAME = "bjonathanb/final-ex-1"
    }
    stages {
        stage('code clone') {
            git 'https://github.com/yonabar1/Finel_EX_1.git'
        }
        stage('build') {
            sh 'mvn package'
            sh 'docker build -t Finel_EX_1:${env.BUILD_ID} .'
            sh """
              docker login -u ${DOCKER_HUB_USERNAME} -p ${DOCKER_HUB_PASSWORD}
              docker tag ${DOCKERHUB_REPO_NAME}:${env.BUILD_ID}
              docker push ${DOCKERHUB_REPO_NAME}:${env.BUILD_ID}
            """
        }
        stage('test') {
            sh 'echo "blabla"'
        }
        stage('reles') {
            sh """
              docker login -u ${DOCKER_HUB_USERNAME} -p ${DOCKER_HUB_PASSWORD}
              docker tag ${DOCKERHUB_REPO_NAME}:latest
              docker push ${DOCKERHUB_REPO_NAME}:latest
            """
        }
        stage('deploy(legacy)') {
        sh 'ansible-playbook deploy/war-deploy-playbook.yaml -i deploy/hosts'
        }
        stage('deploy (modern)') {
            sh 'kubectl apply -f deploy/k8s-deployment.yaml'
        }
      
     latest"
        }
    }
    post {
        success {
            mail to: 'team@example.com',
                    subject: "passed Pipeline: ${currentBuild.fullDisplayName}",
                    body: "Something is OK with ${env.BUILD_URL}"
        }
        failure {
            // notify users when the Pipeline fails
            mail to: 'team@example.com',
                    subject: "Failed Pipeline: ${currentBuild.fullDisplayName}",
                    body: "Something is wrong with ${env.BUILD_URL}"
        }
    }
}
